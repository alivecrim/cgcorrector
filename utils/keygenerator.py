import os


def output_path():
    pt = '/home/javagod/work_project/763/SW/InputSection/servicedata/output/KEY/'
    try:
        os.mkdir(pt)
    except:
        pass
    return pt


keys_measure = {'SPANPNA': ['Установить полосу PNA', 'Полоса PNA', 0, 100000, 'Ц4', 'МГц'],
                'IFBWPNA': ['Установить значение фильтра ПЧ', 'Фильтр ПЧ', 0, 1000000, 'Ц4', 'Гц'],
                'POINTNUMPNA': ['Установить количество точек', 'Количество точек', 0, 100000, 'Ц4', ''],
                'AVERNUMPNA': ['Установить усреднение', 'Усреднение', 0, 1000, 'Ц2', ''],
                'SMOOTHNUM': ['Установить сглаживание', 'Сглаживания', 0, 100, 'Ц1', '%'],
                'POWIN': ['Установить входную мощность', 'Входная мощность', -200, 200, 'В', 'дБм'],
                'POWOUT': ['Установить выходную мощность', 'Выходная мощность', -200, 200, 'В', 'дБм'],
                'FRINCENT': ['Установить входную частоту', 'Входная частота', 0, 100000, 'Ц4', 'МГц'],
                'FROUTCENT': ['Установить выходную частоту', 'Выходная частота', 0, 100000, 'Ц4', 'МГц'],
                'MDELAY': ['Установить задержку', 'Задержка', 0, 100000, 'Ц4', 'c'],
                'CODEMEAS': ['Установить код измерения', 'Код измерения', 0, 100000, 'Ц4', ''],
                'CSANAME': ['Установить файл состояния', 'Файл состояния', '', '', 'Т', ''],
                'ISQRANGE': ['Установить ХЗ', 'ХЗ', 0, 200, 'Ц1', ''],
                'IM3OR5': ['Установить тип измерения интермодов', 'Тип измерения интермодов', 0, 1, 'Ц0', ''],
                'IFBWIM': ['Установить ХЗ', 'ХЗ', 0, 100000, 'Ц4', ''],
                'IFBMMT': ['Установить ХЗ', 'ХЗ', 0, 100000, 'Ц4', ''],
                'FIXDELF': ['Установить ХЗ', 'ХЗ', 0, 100000, 'Ц4', ''],
                'SSI': ['Установить имя конфигурации', 'Имя конфигурации', '', '', 'Т', '']}

for k in keys_measure:
    with open(output_path() + k + '.key', 'wb') as writeFile:
        strToWrite = f'{keys_measure[k][0]}\r\n{k}||{keys_measure[k][2]}|{keys_measure[k][3]}|{keys_measure[k][4]}|{keys_measure[k][5]}|{keys_measure[k][1]}|'
        strToWrite = strToWrite.encode(encoding='cp1251')
        writeFile.write(strToWrite)
